{"version":3,"file":"static/js/415.d2670007.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.js","components/Gallery/GalleryCard/GalleryCard.styled.js","components/Gallery/GalleryCard/GalleryCard.jsx","components/Gallery/Gallery.jsx","components/shared/Box/Box.styled.js","components/shared/Section/Section.jsx","components/shared/Services/MovieApiService.js","components/shared/Title/Title.styled.js","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport theme from 'theme';\r\n\r\nconst GalleryUl = styled.ul`\r\n  width: 100%;\r\n  gap: ${theme.space[5]};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: ${theme.space[6]};\r\n`;\r\nexport default GalleryUl;\r\n","import styled from '@emotion/styled';\r\nimport theme from 'theme';\r\n\r\nexport const Card = styled.li`\r\n  width: calc(((100% - (${theme.space[5]} * 2)) / 3));\r\n  padding: ${theme.space[3]};\r\n  background-color: ${theme.colors.background};\r\n  border-radius: ${theme.radii.normal};\r\n  box-shadow: ${theme.shadow.medium};\r\n  transition: ${theme.transition.primary};\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    scale: 1.1;\r\n    box-shadow: ${theme.shadow.high};\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 500px;\r\n  margin-bottom: ${theme.space[4]};\r\n  object-fit: cover;\r\n  border-radius: $border-radius;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-size: ${theme.fontSizes.m};\r\n  font-weight: ${theme.fontWeights.regular};\r\n  color: ${theme.colors.secondary};\r\n  line-height: 1.14;\r\n  text-align: left;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  display: block;\r\n  text-transform: uppercase;\r\n  margin-bottom: ${theme.space[2]};\r\n`;\r\n\r\nexport const Description = styled.span`\r\n  color: $accent-color;\r\n`;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { Card, Description, Image, Info, Title } from './GalleryCard.styled';\r\n\r\nconst GalleryCard = ({ movieObj, genres, fetchMovieDetails }) => {\r\n  const {\r\n    poster_path,\r\n    title = '',\r\n    id,\r\n    genre_ids,\r\n    release_date = '    ',\r\n  } = movieObj;\r\n\r\n  const cardGenres = (genre_ids, genresArr) => {\r\n    let cardGenresArr = [];\r\n\r\n    if (genre_ids.length === 0) {\r\n      return 'no iformation';\r\n    }\r\n\r\n    genre_ids.map(genre_id =>\r\n      genresArr.map(genre => {\r\n        if (genre.id === genre_id) {\r\n          cardGenresArr.push(genre.name);\r\n        }\r\n      })\r\n    );\r\n\r\n    switch (true) {\r\n      case cardGenresArr.length > 2:\r\n        return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other`;\r\n\r\n      case cardGenresArr.length === 2:\r\n        return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\r\n\r\n      case cardGenresArr.length === 1:\r\n        return `${cardGenresArr[0]}`;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const titleSlice = title => {\r\n    if (title.length > 30) {\r\n      const titleSliced = title.slice(0, 30) + '...';\r\n      return titleSliced;\r\n    } else {\r\n      return title;\r\n    }\r\n  };\r\n\r\n  const { genres: genresArr = [] } = genres;\r\n\r\n  const posterPath = posterPath => {\r\n    return `https://image.tmdb.org/t/p/w500${posterPath}`;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <NavLink\r\n        to={`/movies/${id}`}\r\n        onClick={() => {\r\n          fetchMovieDetails(id);\r\n        }}\r\n      >\r\n        <Image src={posterPath(poster_path)} alt=\"movie poster\" />\r\n        <Info>\r\n          <Title>{titleSlice(title)}</Title>\r\n          <Description>\r\n            {cardGenres(genre_ids, genresArr)} | {release_date.slice(0, 4)}\r\n          </Description>\r\n        </Info>\r\n      </NavLink>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GalleryCard;\r\n","import { useState, useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { InfinitySpin } from 'react-loader-spinner';\r\nimport MovieApiService from 'components/shared/Services/MovieApiService';\r\nimport GalleryUl from './Gallery.styled';\r\nimport GalleryCard from './GalleryCard';\r\nimport theme from 'theme';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nconst Gallery = ({ totalPages, page, movies, onClick, loading, setError }) => {\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = new MovieApiService({\r\n      reqType: 'genre',\r\n      mediaType: 'movie',\r\n    });\r\n\r\n    fetchGenres\r\n      .getReqData()\r\n      .then(result => setGenres(result))\r\n      .catch(result => setError(result.message));\r\n  }, [setError]);\r\n\r\n  return (\r\n    <>\r\n      <GalleryUl>\r\n        {movies.map(movieObj => {\r\n          const { id } = movieObj;\r\n          return <GalleryCard key={id} movieObj={movieObj} genres={genres} />;\r\n        })}\r\n      </GalleryUl>\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          count={totalPages}\r\n          page={page}\r\n          onChange={onClick}\r\n          size=\"large\"\r\n        />\r\n      )}\r\n      {loading && <InfinitySpin width=\"200\" color={theme.colors.accent} />}\r\n    </>\r\n  );\r\n};\r\n\r\nGallery.propTypes = {\r\n  movies: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  setError: PropTypes.func,\r\n};\r\n\r\nexport default Gallery;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  flexbox,\r\n  grid,\r\n  background,\r\n  border,\r\n  position,\r\n  shadow,\r\n  variant,\r\n  flex,\r\n} from 'styled-system';\r\nimport theme from 'theme';\r\n\r\nconst Box = styled('div')(\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  flexbox,\r\n  grid,\r\n  background,\r\n  border,\r\n  position,\r\n  shadow,\r\n  variant({\r\n    variants: {\r\n      container: {\r\n        width: theme.sizes.container,\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n        pl: theme.space[5],\r\n        pr: theme.space[5],\r\n      },\r\n\r\n      containerCentered: {\r\n        width: theme.sizes.container,\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n        pl: theme.space[5],\r\n        pr: theme.space[5],\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n\r\n      section: {\r\n        pt: theme.space[5],\r\n        pb: theme.space[5],\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n      },\r\n\r\n      sectionHero: {\r\n        pt: theme.space[7],\r\n        pb: theme.space[7],\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default Box;\r\n","import Box from 'components/shared/Box';\r\nimport Title from 'components/shared/Title/Title.styled';\r\nimport { PropTypes } from 'prop-types';\r\nimport theme from 'theme';\r\n\r\nconst Section = ({\r\n  title,\r\n  titleVariant,\r\n  titleAs,\r\n  children,\r\n  bgColor = theme.colors.primary,\r\n  sectionVariant,\r\n  containerVariant,\r\n  minHeight,\r\n  backgroundImage = null,\r\n}) => {\r\n  return (\r\n    <Box\r\n      variant={sectionVariant}\r\n      as=\"section\"\r\n      backgroundColor={bgColor}\r\n      minHeight={minHeight}\r\n      backgroundImage={backgroundImage}\r\n      backgroundSize=\"cover\"\r\n      backgroundPosition=\"center\"\r\n    >\r\n      <Box variant={containerVariant}>\r\n        {title && (\r\n          <Title variant={titleVariant} as={titleAs}>\r\n            {title}\r\n          </Title>\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  titleVariant: PropTypes.string,\r\n  titleAs: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import axios from 'axios';\r\n\r\nconst URL = `https://api.themoviedb.org/3/`;\r\nconst key = 'ac91775ba29254b7e75060011bf34a90';\r\n\r\nclass MovieApiService {\r\n  // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\r\n  // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n\r\n  constructor({ reqType, mediaType, timeWindow = 'week' }) {\r\n    this.reqType = reqType;\r\n    this.mediaType = mediaType;\r\n    this.timeWindow = timeWindow;\r\n    this.userRequest = null;\r\n    this.page = 1;\r\n    this.totalResults = 0;\r\n  }\r\n\r\n  async getReqData(id = null, page = 1) {\r\n    let searchParams;\r\n    let response;\r\n\r\n    switch (this.reqType) {\r\n      // get genres ==========================================================================\r\n\r\n      case 'genre':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.reqType}/${this.mediaType}/list?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      // get trending ==========================================================================\r\n\r\n      case 'trending':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n          page: page,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.reqType}/${this.mediaType}/${this.timeWindow}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      // get search ==========================================================================\r\n\r\n      case 'search':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n          query: this.userRequest,\r\n          page: page,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.reqType}/${this.mediaType}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      // get getById ==========================================================================\r\n\r\n      case 'getById':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.mediaType}/${id}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      // get getDetails ==========================================================================\r\n\r\n      case 'movie':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.mediaType}/${id}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      case 'credits':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.mediaType}/${id}/${this.reqType}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      case 'reviews':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.mediaType}/${id}/${this.reqType}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      // https://api.themoviedb.org/3/images/800345?api_key=ac91775ba29254b7e75060011bf34a90\r\n\r\n      // https://api.themoviedb.org/3/movie/{movie_id}/images?api_key=<<api_key>>&language=en-US\r\n\r\n      case 'images':\r\n        searchParams = new URLSearchParams({\r\n          api_key: key,\r\n        });\r\n\r\n        response = await axios.get(\r\n          `${URL}${this.mediaType}/${id}/${this.reqType}?${searchParams}`\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const data = response.data;\r\n\r\n    this.getTotalRes(data);\r\n    return data;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  set request(newRequest) {\r\n    this.userRequest = newRequest;\r\n  }\r\n\r\n  get request() {\r\n    return this.userRequest;\r\n  }\r\n\r\n  getTotalRes(data) {\r\n    this.totalResults = data.total_results;\r\n  }\r\n}\r\n\r\nexport default MovieApiService;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  flexbox,\r\n  grid,\r\n  background,\r\n  border,\r\n  position,\r\n  shadow,\r\n  variant,\r\n} from 'styled-system';\r\n\r\nimport theme from 'theme';\r\n\r\n// const Title = styled.h3`\r\n//   text-align: center;\r\n//   font-size: ${theme.fontSizes.xl};\r\n//   font-weight: ${theme.fontWeights.bold};\r\n//   color: ${theme.colors.accent};\r\n//   margin-left: auto;\r\n//   margin-right: auto;\r\n// `;\r\n\r\nconst Title = styled('p')(\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  border,\r\n  position,\r\n\r\n  variant({\r\n    variants: {\r\n      mainTitle: {\r\n        textAlign: 'center',\r\n        fontSize: theme.fontSizes.xl,\r\n        fontWeight: theme.fontWeights.bold,\r\n        color: theme.colors.secondary,\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n        mb: theme.space[5],\r\n      },\r\n\r\n      subTitle: {\r\n        textAlign: 'center',\r\n        fontSize: theme.fontSizes.xl,\r\n        fontWeight: theme.fontWeights.regular,\r\n        color: theme.colors.secondary,\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n        mb: [5],\r\n      },\r\n\r\n      subTitleAccent: {\r\n        textAlign: 'center',\r\n        fontSize: theme.fontSizes.xl,\r\n        fontWeight: theme.fontWeights.regular,\r\n        color: theme.colors.accent,\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n        mb: [5],\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default Title;\r\n","import { useState, useEffect } from 'react';\r\nimport { Report } from 'notiflix/build/notiflix-report-aio';\r\nimport MovieApiService from 'components/shared/Services/MovieApiService';\r\nimport Section from 'components/shared/Section';\r\nimport Gallery from 'components/Gallery';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const [trending, setTrending] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const currentPage = Number(searchParams.get('page'));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    if (currentPage !== 0) {\r\n      if (currentPage !== page) {\r\n        setPage(currentPage);\r\n      }\r\n    }\r\n\r\n    const fetchTrending = new MovieApiService({\r\n      reqType: 'trending',\r\n      mediaType: 'movie',\r\n      timeWindow: 'week',\r\n    });\r\n\r\n    const fetchData = async page => {\r\n      try {\r\n        const { results, total_results, total_pages } =\r\n          await fetchTrending.getReqData(null, page);\r\n\r\n        if (total_pages > 1) {\r\n          setTotalPages(total_pages);\r\n        }\r\n\r\n        if (total_results.length === 0) {\r\n          Report.failure('No movies found!');\r\n        }\r\n        return results;\r\n      } catch (result) {\r\n        setError(result.status_message);\r\n      }\r\n    };\r\n\r\n    fetchData(page)\r\n      .then(result => setTrending(result))\r\n      .catch(result => setError(result.status_message))\r\n      .finally(() => setLoading(false));\r\n  }, [currentPage, page]);\r\n\r\n  const loadMore = (e, num) => {\r\n    setPage(num);\r\n    setSearchParams({ page: num });\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section\r\n        title=\"Most trending films of the week\"\r\n        titleVariant=\"mainTitle\"\r\n        sectionVariant=\"section\"\r\n        containerVariant=\"containerCentered\"\r\n      >\r\n        {!error && (\r\n          <Gallery\r\n            totalPages={totalPages}\r\n            page={page}\r\n            movies={trending}\r\n            loading={loading}\r\n            onClick={loadMore}\r\n          />\r\n        )}\r\n        {error && Report.failure(error)}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["styled","theme","Card","Image","Info","Title","Description","posterPath","movieObj","genres","fetchMovieDetails","poster_path","title","id","genre_ids","release_date","genresArr","to","onClick","src","alt","length","slice","titleSlice","cardGenresArr","map","genre_id","genre","push","name","cardGenres","totalPages","page","movies","loading","setError","useState","setGenres","useEffect","MovieApiService","reqType","mediaType","getReqData","then","result","catch","message","Pagination","count","onChange","size","width","color","typography","space","layout","flexbox","grid","background","border","position","shadow","variant","variants","container","ml","mr","pl","pr","containerCentered","display","flexDirection","alignItems","section","pt","pb","sectionHero","titleVariant","titleAs","children","bgColor","sectionVariant","containerVariant","minHeight","backgroundImage","Box","as","backgroundColor","backgroundSize","backgroundPosition","URL","key","timeWindow","this","userRequest","totalResults","searchParams","URLSearchParams","api_key","axios","response","query","data","getTotalRes","newRequest","total_results","mainTitle","textAlign","fontSize","fontWeight","mb","subTitle","subTitleAccent","trending","setTrending","useSearchParams","setSearchParams","setPage","setTotalPages","setLoading","error","currentPage","Number","get","fetchTrending","fetchData","results","total_pages","Report","status_message","finally","e","num","window","scrollTo","top","behavior"],"sourceRoot":""}